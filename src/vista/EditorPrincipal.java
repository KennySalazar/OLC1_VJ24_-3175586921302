/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_compi1.vista;

import Reportes.TablaSimbolosReporte;
import abstracto.Instruccion;
import analisis.parser;
import analisis.scanner;
import excepciones.Errores;
import expresiones.AccesoVariable;
import instrucciones.StartWith;
import instrucciones.AsignacionVariable;
import instrucciones.Declaracion;
import instrucciones.DeclaracionVector;
import instrucciones.Funcion;
import instrucciones.Metodo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;

import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import javax.swing.JTextArea;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;

import javax.swing.text.JTextComponent;
import simbolo.Arbol;
import simbolo.tablaSimbolos;

/**
 *
 * @author Kenny Salazar
 */
public class EditorPrincipal extends javax.swing.JFrame {

    numeroLinea numeroLinea;

    private List<JTextArea> textAreas;

    /**
     * Creates new form EditorPrincipal
     */
    public EditorPrincipal() {
        initComponents();

        textAreas = new ArrayList<>();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btEjecutar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        btnCargaArchivo = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        entradaTabbed = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaErrores = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaSimbolos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 0));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTabbedPane1.setForeground(new java.awt.Color(255, 51, 0));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        btEjecutar.setBackground(new java.awt.Color(204, 204, 204));
        btEjecutar.setForeground(new java.awt.Color(153, 0, 0));
        btEjecutar.setText("Ejecutar");
        btEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEjecutarActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setForeground(new java.awt.Color(153, 0, 0));
        jButton2.setText("Guardar");

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setForeground(new java.awt.Color(153, 0, 0));
        jButton3.setText("Cerrar");

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONSOLA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 51, 0))); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCargaArchivo.setBackground(new java.awt.Color(204, 204, 204));
        btnCargaArchivo.setForeground(new java.awt.Color(153, 0, 0));
        btnCargaArchivo.setText("Cargar Archivo");
        btnCargaArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargaArchivoActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setForeground(new java.awt.Color(153, 0, 0));
        jButton5.setText("Archivo Nuevo");

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ENTRADA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 51, 0))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(entradaTabbed)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(entradaTabbed, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCargaArchivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(btEjecutar)
                                .addGap(12, 12, 12))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(btEjecutar)
                    .addComponent(btnCargaArchivo)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Inicio", jPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 545, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Pestaña", jPanel3);

        TablaErrores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No. ", "Tipo", "Descripción", "Linea", "Columna"
            }
        ));
        jScrollPane3.setViewportView(TablaErrores);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab1", jPanel4);

        tablaSimbolos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaSimbolos);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab2", jPanel7);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reportes", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEjecutarActionPerformed
        // Obtener el índice de la pestaña seleccionada
        int selectedIndex = entradaTabbed.getSelectedIndex();

        if (selectedIndex != -1) {
            // Obtener el componente (JScrollPane) de la pestaña seleccionada
            JScrollPane scrollPane = (JScrollPane) entradaTabbed.getComponentAt(selectedIndex);

            // Obtener el JTextArea del JScrollPane
            JViewport viewport = scrollPane.getViewport();
            JTextArea textArea = (JTextArea) viewport.getView();

            // Obtener el texto del JTextArea
            String texto = textArea.getText();

            //------
            try {
                scanner s = new scanner(new BufferedReader(new StringReader(texto)));
                parser p = new parser(s);
                var resultado = p.parse();
                var ast = new Arbol((LinkedList<Instruccion>) resultado.value);
                var tabla = new tablaSimbolos();
                tabla.setNombre("GLOBAL");
                ast.setConsola("");
                ast.setTablaGlobal(tabla);
                LinkedList<TablaSimbolosReporte> listaReporSimbolos = new LinkedList<>();
                LinkedList<Errores> lista = new LinkedList<>();
                lista.addAll(s.listaErrores);
                lista.addAll(p.listaErrores);

                StringBuilder consolaBuilder = new StringBuilder();
                StringBuilder erroresBuilder = new StringBuilder();

                // 1ER VUELTA: Almacenar los métodos   STRUCT
                for (var a : ast.getInstrucciones()) {
                    if (a == null) {
                        continue;
                    }

                    if (a instanceof Metodo || a instanceof Funcion) {
                        ast.addFunciones(a);
                    }
                }

                // 2DA VUELTA: Procesar declaraciones y almacenar el resultado en la consola 
                for (var a : ast.getInstrucciones()) {
                    if (a == null) {
                        continue;
                    }
                    if (a instanceof Declaracion || a instanceof AsignacionVariable || a instanceof DeclaracionVector) {
                        var res = a.interpretar(ast, tabla);
                        if (res instanceof Errores) {
                            lista.add((Errores) res);
                        } else {
                            // Almacenar el resultado de la declaración en la consola
                            consolaBuilder.append(res != null ? res.toString() : "").append("\n");
                        }
                    }
                }

                //execute -> start_with
                StartWith r = null;
                for (var a : ast.getInstrucciones()) {
                    if (a == null) {
                        continue;
                    }
                    if (a instanceof StartWith run) {
                        r = run;
                        break;
                    }
                }

                var resultadoExecute = r.interpretar(ast, tabla);
                if (resultadoExecute instanceof Errores) {
                    System.out.println("Ya no sale compi1");
                }
                

                consolaBuilder.append(ast.getConsola());
                 lista.addAll(ast.getErrores());
                for (Errores error : lista) {
                    erroresBuilder.append(error.toString()).append("\n");
                }
                

                // Establecer el texto completo en el JTextArea de la consola
                this.jTextArea2.setText(consolaBuilder.toString() + erroresBuilder.toString());

                llenarTablaErrores(lista, TablaErrores);
                llenarTablaSimbolos(ast.getListaReportes(), tablaSimbolos);

            } catch (Exception ex) {
                this.jTextArea2.setText("ALGO SALIO MAL\n " + ex);
                System.out.println("Algo salio mal");
                System.out.println(ex);
            }
        } else {
            // Si no hay una pestaña seleccionada, mostrar un mensaje de advertencia
            JOptionPane.showMessageDialog(this, "No hay una pestaña seleccionada.");
        }
    }//GEN-LAST:event_btEjecutarActionPerformed

    private void btnCargaArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargaArchivoActionPerformed
        // TODO add your handling code here:
        abrirFileChooser();
    }//GEN-LAST:event_btnCargaArchivoActionPerformed

    public void abrirFileChooser() {
        JFileChooser jf = new JFileChooser();
        int returnValue = jf.showOpenDialog(this.jPanel2);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File archivo = jf.getSelectedFile();
            if (archivo != null && !archivo.getName().equals("")) {
                JTextArea nuevaAreaTexto = new JTextArea();
                textAreas.add(nuevaAreaTexto);
                numeroLinea lineNumberTextArea = new numeroLinea(nuevaAreaTexto);
                // lineNumberTextArea.setEditable(false);
                JScrollPane scrollPane = new JScrollPane(nuevaAreaTexto);
                scrollPane.setRowHeaderView(lineNumberTextArea);
                entradaTabbed.addTab(archivo.getName(), scrollPane);

                leerArchivoDeEntrada(archivo.getAbsolutePath(), nuevaAreaTexto);
            }
        }
    }

    public void leerArchivoDeEntrada(String nombre, JTextArea areaEntrada) {
        int contadorLineas = 0;
        String linea;
        StringBuilder txt = new StringBuilder();
        areaEntrada.setText("");
        try (BufferedReader bufer = new BufferedReader(new FileReader(new File(nombre)))) {
            while ((linea = bufer.readLine()) != null) {
                contadorLineas++;
                System.out.println("Linea " + contadorLineas + ": " + linea);
                txt.append(linea).append("\n");
            }
            areaEntrada.setText(txt.toString());
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this.jPanel2, "Ha ocurrido un error al intentar cargar el archivo");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this.jPanel2, "Ha ocurrido un error al intentar leer el archivo");
        }
    }

    public void llenarTablaErrores(LinkedList<Errores> listaEr, JTable tablaE) {

        try {
            DefaultTableModel tabla1 = new DefaultTableModel();
            String[] columna = new String[5];

            tabla1.addColumn("No.");
            tabla1.addColumn("Tipo");
            tabla1.addColumn("Descripcion");
            tabla1.addColumn("Linea");
            tabla1.addColumn("Columna");

            int i = 1;
            for (Errores er : listaEr) {
                columna[0] = "" + i;
                columna[1] = er.getTipo();
                columna[2] = er.getDesc();
                columna[3] = "" + er.getLinea();
                columna[4] = "" + er.getColumna();

                tabla1.addRow(columna);
                i++;

            }

            tablaE.setModel(tabla1);
        } catch (NullPointerException e) {
        }

    }

    public void llenarTablaSimbolos(LinkedList<TablaSimbolosReporte> listaSim, JTable tablaE) {

        try {
            DefaultTableModel tabla1 = new DefaultTableModel();
            String[] columna = new String[8];

            tabla1.addColumn("No.");
            tabla1.addColumn("ID");
            tabla1.addColumn("Mutabilidad");
            tabla1.addColumn("Tipo");
            tabla1.addColumn("Entorno");
            tabla1.addColumn("Valor");
            tabla1.addColumn("Linea");
            tabla1.addColumn("Columna");

            int i = 1;
            for (TablaSimbolosReporte s : listaSim) {
                columna[0] = "" + i;
                columna[1] = s.getId();
                columna[2] = s.getTipo1();
                columna[3] = s.getTipo2();
                columna[4] = s.getEntorno();
                columna[5] = s.getValor();
                columna[6] = s.getLinea();
                columna[7] = s.getColumna();

                tabla1.addRow(columna);
                i++;
            }

            tablaE.setModel(tabla1);
        } catch (NullPointerException e) {
        }

    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaErrores;
    private javax.swing.JButton btEjecutar;
    private javax.swing.JButton btnCargaArchivo;
    private javax.swing.JTabbedPane entradaTabbed;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTable tablaSimbolos;
    // End of variables declaration//GEN-END:variables
}
